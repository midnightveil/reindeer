name: CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        channel: [ stable ]
        target:
          # desktop-class platforms
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          # cross-compiling is too hard
          # - aarch64-unknown-linux-gnu
        features: [ "--no-default-features", "--all-features" ]

    steps:
      - uses: actions/checkout@v3
      - run: rustup target add ${{ matrix.target }}
      - run: rustup update ${{ matrix.channel }} && rustup default ${{ matrix.channel }}
      - run: cargo build --target ${{ matrix.target }} ${{ matrix.features }}
      - run: cargo test --verbose --target ${{ matrix.target }} ${{ matrix.features }}

  build_embedded:
    name: Embedded Builds
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        channel: [ stable ]
        target:
          - aarch64-unknown-none
          - x86_64-unknown-none
          - armv7a-none-eabi

    steps:
      - uses: actions/checkout@v3
      - run: rustup target add ${{ matrix.target }}
      - run: rustup update ${{ matrix.channel }} && rustup default ${{ matrix.channel }}
      - run: cargo build --package reindeer --target ${{ matrix.target }} --no-default-features

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo clippy

  kani:
    name: Run Kani
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: model-checking/kani-github-action@v1
        with:
          kani-version: '0.50.0'
          command: 'cargo-kani'
          args: '--lib'
